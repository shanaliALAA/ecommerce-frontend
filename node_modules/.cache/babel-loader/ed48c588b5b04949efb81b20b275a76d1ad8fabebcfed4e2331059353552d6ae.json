{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [user, setUser] = useState(null);\n\n  // Load cart and user from memory on mount\n  useEffect(() => {\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\n    const savedUser = JSON.parse(localStorage.getItem('user')) || null;\n    setCart(savedCart);\n    setUser(savedUser);\n  }, []);\n\n  // Save cart to memory whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item._id === product._id);\n      if (existingItem) {\n        return prevCart.map(item => item._id === product._id ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      }\n      return [...prevCart, {\n        ...product,\n        quantity\n      }];\n    });\n  };\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item._id !== productId));\n  };\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart => prevCart.map(item => item._id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  const getCartCount = () => {\n    return cart.reduce((count, item) => count + item.quantity, 0);\n  };\n  const login = (userData, token) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('token', token);\n  };\n  const logout = () => {\n    setUser(null);\n    setCart([]);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('cart');\n  };\n  const value = {\n    cart,\n    user,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartCount,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n};\n_s2(CartProvider, \"diesNa3GhtVOV0oE8zv+eQb34a8=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","user","setUser","savedCart","JSON","parse","localStorage","getItem","savedUser","setItem","stringify","addToCart","product","quantity","prevCart","existingItem","find","item","_id","map","removeFromCart","productId","filter","updateQuantity","clearCart","getCartTotal","reduce","total","price","getCartCount","count","login","userData","token","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/acer/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Load cart and user from memory on mount\r\n  useEffect(() => {\r\n    const savedCart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    const savedUser = JSON.parse(localStorage.getItem('user')) || null;\r\n    setCart(savedCart);\r\n    setUser(savedUser);\r\n  }, []);\r\n\r\n  // Save cart to memory whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addToCart = (product, quantity = 1) => {\r\n    setCart((prevCart) => {\r\n      const existingItem = prevCart.find((item) => item._id === product._id);\r\n      \r\n      if (existingItem) {\r\n        return prevCart.map((item) =>\r\n          item._id === product._id\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item\r\n        );\r\n      }\r\n      \r\n      return [...prevCart, { ...product, quantity }];\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCart((prevCart) => prevCart.filter((item) => item._id !== productId));\r\n  };\r\n\r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n    \r\n    setCart((prevCart) =>\r\n      prevCart.map((item) =>\r\n        item._id === productId ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const getCartTotal = () => {\r\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n  };\r\n\r\n  const getCartCount = () => {\r\n    return cart.reduce((count, item) => count + item.quantity, 0);\r\n  };\r\n\r\n  const login = (userData, token) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setCart([]);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('cart');\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    user,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartTotal,\r\n    getCartCount,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}